function pkcs1unpad2(a,d){for(var c=a.toByteArray(),b=0;b<c.length&&0==c[b];)++b;if(c.length-b!=d-1||2!=c[b])return null;for(++b;0!=c[b];)if(++b>=c.length)return null;for(var f="";++b<c.length;){var e=c[b]&255;128>e?f+=String.fromCharCode(e):191<e&&224>e?(f+=String.fromCharCode((e&31)<<6|c[b+1]&63),++b):(f+=String.fromCharCode((e&15)<<12|(c[b+1]&63)<<6|c[b+2]&63),b+=2)}return f}
function RSASetPrivate(a,d,c){null!=a&&null!=d&&0<a.length&&0<d.length?(this.n=parseBigInt(a,16),this.e=parseInt(d,16),this.d=parseBigInt(c,16)):alert("Invalid RSA private key")}
function RSASetPrivateEx(a,d,c,b,f,e,g,h){null!=a&&null!=d&&0<a.length&&0<d.length?(this.n=parseBigInt(a,16),this.e=parseInt(d,16),this.d=parseBigInt(c,16),this.p=parseBigInt(b,16),this.q=parseBigInt(f,16),this.dmp1=parseBigInt(e,16),this.dmq1=parseBigInt(g,16),this.coeff=parseBigInt(h,16)):alert("Invalid RSA private key")}
function RSAGenerate(a,d){var c=new SecureRandom,b=a>>1;this.e=parseInt(d,16);for(var f=new BigInteger(d,16);;){for(;this.p=new BigInteger(a-b,1,c),0!=this.p.subtract(BigInteger.ONE).gcd(f).compareTo(BigInteger.ONE)||!this.p.isProbablePrime(10););for(;this.q=new BigInteger(b,1,c),0!=this.q.subtract(BigInteger.ONE).gcd(f).compareTo(BigInteger.ONE)||!this.q.isProbablePrime(10););if(0>=this.p.compareTo(this.q)){var e=this.p;this.p=this.q;this.q=e}e=this.p.subtract(BigInteger.ONE);var g=this.q.subtract(BigInteger.ONE),
h=e.multiply(g);if(0==h.gcd(f).compareTo(BigInteger.ONE)){this.n=this.p.multiply(this.q);this.d=f.modInverse(h);this.dmp1=this.d.mod(e);this.dmq1=this.d.mod(g);this.coeff=this.q.modInverse(this.p);break}}}function RSADoPrivate(a){if(null==this.p||null==this.q)return a.modPow(this.d,this.n);var d=a.mod(this.p).modPow(this.dmp1,this.p);for(a=a.mod(this.q).modPow(this.dmq1,this.q);0>d.compareTo(a);)d=d.add(this.p);return d.subtract(a).multiply(this.coeff).mod(this.p).multiply(this.q).add(a)}
function RSADecrypt(a){a=parseBigInt(a,16);a=this.doPrivate(a);return null==a?null:pkcs1unpad2(a,this.n.bitLength()+7>>3)}RSAKey.prototype.doPrivate=RSADoPrivate;RSAKey.prototype.setPrivate=RSASetPrivate;RSAKey.prototype.setPrivateEx=RSASetPrivateEx;RSAKey.prototype.generate=RSAGenerate;RSAKey.prototype.decrypt=RSADecrypt;